{"version":3,"sources":["./frontend/api_util.js","./frontend/follow_toggle.js","./frontend/tweet_compose.js","./frontend/users_search.js","webpack/bootstrap","./frontend/twitter.js"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,aAAa,kBAAkB;AAC/B;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,qBAAqB,GAAG;AACxB;AACA;AACA,KAAK;AACL;;AAEA,yB;;;;;;;;;;ACpCA,gBAAgB,mBAAO,CAAC,0CAAY;;AAEpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,kCAAkC,IAAI;AACtC,KAAK;AACL;;AAEA,8B;;;;;;;;;;ACvCA,gBAAgB,mBAAO,CAAC,0CAAY;;AAEpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,YAAY,sBAAsB,YAAY,IAAI,kBAAkB,UAAU,eAAe;AAC3H,SAAS;AACT,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA,KAAK;;AAEL;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,8B;;;;;;;;;;ACtDA,gBAAgB,mBAAO,CAAC,0CAAY;;AAEpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA;AACA,6CAA6C,cAAc;AAC3D;AACA,SAAS;AACT;AACA;;AAEA,4B;;;;;;UC/BA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;ACtBA,qBAAqB,mBAAO,CAAC,oDAAiB;AAC9C,oBAAoB,mBAAO,CAAC,kDAAgB;AAC5C,qBAAqB,mBAAO,CAAC,oDAAiB;;;AAG9C;;AAEA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA,CAAC","file":"bundle.js","sourcesContent":["const APIUtil = {\n  followUser: id => {\n    return ajaxUser(id, 'POST');\n  },\n\n  unfollowUser: id => {\n    return ajaxUser(id, 'DELETE');\n  },\n\n  searchUsers(queryVal) {\n    return $.ajax({\n      url: `/users/search`,\n      method: 'GET',\n      data: { query: queryVal },\n      dataType: 'JSON'\n    })\n  },\n\n  createTweet(data){\n    return $.ajax({\n      url: '/tweets',\n      method: 'POST',\n      data: data,\n      dataType: 'JSON'\n    })\n  }\n};\n\nfunction ajaxUser (id, method) {\n    return $.ajax({\n      url: `/users/${id}/follow`,\n      method,\n      dataType: 'JSON'\n    })\n}\n\nmodule.exports = APIUtil;","const APIUtil = require(\"./api_util\");\n\nclass FollowToggle {\n  constructor($el){\n    this.button = $el;\n    this.userId = $el.data('userId');\n    this.followState = $el.data('initialFollowState');\n\n    this.handleClick();\n    this.render();\n  }\n\n  render() {\n    this.button.empty();\n    this.button.prop('disabled', false);\n    this.button.text( this.followState === false ? \"Follow!\" : \"Unfollow!\");\n  }\n\n  handleClick() {\n    // _handleClick.bind(this)\n    this.button.on('click', (_handleClick).bind(this) )\n  }\n}\n\nfunction _handleClick(e){\n  e.preventDefault();\n  this.button.prop('disabled', true);\n\n  (this.followState ?  APIUtil.unfollowUser(this.userId) : APIUtil.followUser(this.userId))\n  .then((res) => {\n      this.followState = !this.followState;\n      this.render();\n    })\n  .fail((err) => {\n      console.log(err);\n      alert(`you CANT do that!\\n${err}`)\n    })\n}\n\nmodule.exports = FollowToggle;","const APIUtil = require('./api_util');\n\nclass TweetCompose{\n  constructor($el){\n    this.$el = $el;\n    this.$el.data('tweetsUl', '#feed');\n    this.$el.on('submit', e => {\n      e.preventDefault();\n      \n      this\n        .submit()\n        .then(res => {\n          console.log(res)\n          this.handleSuccess();\n          console.log($(this.$el.data('tweetsUl')));\n          $(this.$el.data('tweetsUl'))\n            .prepend($(`<li>${res.content} -- <a href=\"/users/${res.user_id}\">${res.user.username}</a> -- ${res.created_at}</li>`))\n        });\n    });\n\n    let $textArea = this.$el.find('textarea');\n    $textArea.on('input', e => {\n      let val = $textArea.val()\n\n      if (val.length > 140){\n        $textArea.val(val.substr(0, 140));\n      }\n\n      let newLength = 140 - $textArea.val().length;\n\n      $('.chars-left').text( newLength );\n      \n    });\n\n  }\n\n  submit(){\n    let data = this.$el.serialize();\n\n    this.$el.find(':input').prop('disabled', true);\n\n    return APIUtil.createTweet(data);\n  }\n\n  clearInput(){\n    this.$el.find(':input[type=\"text\"]').val('');\n  }\n\n  handleSuccess(){\n    this.clearInput();\n    this.$el.find(':input').prop('disabled', false);\n  }\n}\n\nmodule.exports = TweetCompose;","const APIUtil = require(\"./api_util\");\n\nclass UsersSearch {\n    constructor($el) {\n        this.$el = $el;\n        this.$ul = $el.find('ul');\n        this.$input = $el.find('input');\n        console.log(this.$input);\n        \n        this.handleInput()\n    }\n\n    handleInput() {\n        this.$input.on('input', (e) => {\n            APIUtil.searchUsers(this.$input.val())\n            .then( (res) => {\n                console.log(res);\n                this.renderResults(res);\n            })\n        })\n    }\n\n    renderResults(res) {\n        this.$ul.empty();\n        res.forEach( user => {\n            let $li = $(`<li><a href=\"#\"> @${user.username} </a></li>`);\n            this.$ul.append($li);\n        })\n    }\n}\n\nmodule.exports = UsersSearch","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const FollowToggle = require(\"./follow_toggle\");\nconst UsersSearch = require(\"./users_search\");\nconst TweetCompose = require(\"./tweet_compose\");\n\n\n$(document).ready( () => {\n\n  let $buttons = $('.follow-toggle');\n\n  $buttons.each((i, button) => {\n    new FollowToggle($(button));\n  });\n\n  $('.users-search').each( (i, nav) => {\n    new UsersSearch($(nav));\n  })\n  \n  new TweetCompose( $('.tweet-compose') );\n});\n"],"sourceRoot":""}