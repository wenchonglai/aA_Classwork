c
params
req.cookies
c
req.cookies
c
q
@form_authenticity_token
req.cookies['authenticity_token']
n
@@protect_from_forgery
q
req.cookies
@req.request_method
req
q
y
quit
Rack::Mime.mime_type(File.extname(capture))
capture
Rack::Mime.mime_type(File.extname(res.path))
Rack::Mine.mime_type(File.extname(res.path))
File.extname(res.path).mime_type
require 'rack'
File.extname(res.path).mime_type
File.extname(res.path)
File.extname(file)
capture.mime_type
capture
file
q
c
File.join(File.dirname(__FILE__), '..', capture)
quit
File.dirname(__FILE__) + capture
File.dirname(__FILE__)
c
q
n
match_data
q
c
match_data
match_data.captures
match_data
quit
capture
File.dirname(__FILE__)
File
quit
{**(@@cache.last || {})}
(@@cache.last || {})
c
q
c
n
(@@cache.last||{})
{**@@cache.last || {}}
{**@@cache || {}}
@@cache
flash
c
flash['golden gate park']
flash
n
@flash
n
@flash
@@cache
n
@flash
n
{**{}}
@@cache.last || {}
@@cache.last
@@cache
quit
resquit
res
res.set_cookie
res['Set-Cookie']
res
@controller_class.new
@controller_class
q
quit
{}.push({})
{} + {}
req.params
quit
q
c
self.match(req)
self
q
n
req.path
routes[0]
routes
req.path
req
@routes.detect{|route| route.matches?(req.path)}
@routes.detect{|route| route.matches?(req)}
@routes
req
c
route
q
res['Set-Cookie']
res
q
cookie
cookie_val
coockie_str
cookie
quit
cookie
cookie_val
q
cookie
cookie_val
q
JSON.parse
require 'json'
@data["_rails_lite_app"]
@data["_rails_lite_app"].to_json
@data["_rails_lite_app"]
@data
